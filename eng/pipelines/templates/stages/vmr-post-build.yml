parameters:
# Branch of the VMR to use (to push to for internal builds)
- name: vmrBranch
  type: string
  default: $(Build.SourceBranch)

- name: pool_Windows
  type: object
  default:
    name: $(defaultPoolName)
    image: $(poolImage_Windows)
    demands: ImageOverride -equals $(poolImage_Windows)
    os: windows
    
stages:
- stage: VMR_Post_build
  displayName: VMR Post Build
  dependsOn: VMR_Vertical_Build
  variables:
  - ${{ if eq(variables['System.TeamProject'], 'internal') }}:
    - group: Publish-Build-Assets
    - name: azureDevOpsOrg
      value: dnceng
    - name: azureDevOpsProject
      value: internal
  - ${{ else }}:
    - name: azureDevOpsOrg
      value: dnceng-public
    - name: azureDevOpsProject
      value: public

  - template: ../variables/vmr-build.yml
    parameters:
      vmrBranch: ${{ parameters.vmrBranch }}

  jobs:
  - job: VMR_Final_Join
    displayName: VMR Final Vertical Join
    pool: ${{ parameters.pool_Windows }}

    templateContext:
      outputs:
      - output: pipelineArtifact
        path: $(Build.ArtifactStagingDirectory)/artifacts
        artifact: JoinedArtifacts
        condition: succeededOrFailed()

    steps:
    - checkout: self

    - template: ../steps/vmr-join-verticals.yml@self
      parameters:
        dotNetBuildPass: final
        primaryDependentJob: Windows_x64
        azureDevOpsToken: $(dn-bot-dnceng-build-rw-code-rw)
        azureDevOpsOrg: $(azureDevOpsOrg)
        azureDevOpsProject: $(azureDevOpsProject)
        outputFolder: $(Build.ArtifactStagingDirectory)/artifacts

    - ${{ if or(ne(variables['System.TeamProject'], 'internal'), eq(variables['Build.Reason'], 'PullRequest')) }}:
      - publish: $(Build.ArtifactStagingDirectory)/artifacts
        artifact: JoinedArtifacts
        displayName: Publish Artifacts
        condition: succeededOrFailed()
        continueOnError: true